# Read `man 5 sway` for a complete reference.

# TIP: Toggle behavior
# bindsym $whatever mode $mymode; exec $dostuff
# mode $mymode {
#     bindsym Escape mode default; exec $undostuff
# }

### Start-up applications  -----------------------------------------------------

exec autotiling 
exec megasync

# Move Megasync to the 5th workspace
for_window [class="MEGAsync"] move to workspace number 5

### bindings  -----------------------------------------------------------------

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

set $term foot
set $browser firefox
set $files thunar
set $menu wofi --show run
set $screenshot grim -g "$(slurp)" - | wl-copy
set $lock 'swaylock -f -c 0000ff'
set $sway-path $HOME/.config/sway

output * bg $sway-path/wallpaper/totoro.png fill

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 300 $lock \
         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep $lock

### Key bindings
#
    bindsym $mod+space exec $menu

    # Use menu name as a shortcut hint
    set $options "options -  term: t | browser: b | files: f | quit: q | wifi: w | screenshot: s | toggle gap: g | reload config c"

    mode $options {
        bindsym t exec $term; mode "default"
        bindsym b exec $browser; mode "default"
        bindsym f exec $files; mode "default"
        bindsym q kill; mode "default"

        bindsym w exec foot -e nmtui; mode "default"
        bindsym s exec $screenshot; mode "default"
        bindsym g exec $sway-path/toggle-gap.sh; mode "default"
        # Reload the configuration file
        bindsym c reload; mode "default"

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+o mode $options

    set $audio "audio: prev: h | play/pause: k | next: l"
    mode $audio {
        bindsym $left exec playerctl previous; mode "default"
        bindsym $right exec playerctl next; mode "default"
        bindsym $up exec playerctl play-pause; mode "default"
        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+a mode $audio

    set $suspend "suspend:  lock: l | idle: i | suspend: s | idle off: q"
    mode $suspend {
        # bindsym s exec swayidle -w timeout 5 'swaylock -f -c 000000' ; mode "default"
        
        bindsym i mode "default"; exec swayidle -w \
                         timeout 300 $lock \
                         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
                         before-sleep $lock

        bindsym s mode "default"; exec swayidle -w \
                         timeout 1 $lock \
                         timeout 3 'swaymsg "output * power off"' resume 'swaymsg "output * power on"; pkill -9 "swayidle"' \
                         before-sleep $lock

        bindsym q exec pkill -9 "swayidle"; mode "default"
        bindsym l exec $lock; mode "default"

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+x mode $suspend

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    #bindsym $mod+b splith
    #bindsym $mod+v splitv

    set $pane "pane - move: hjkl | stacking: s | toggle split: e | toggle floating: g | resize: r | fullscreen: f"
    mode $pane {
        # Move the focused window with the same, but add Shift
        bindsym $left move left
        bindsym $down move down
        bindsym $up move up
        bindsym $right move right

        # Switch the current container between different layout styles
        bindsym s layout stacking; mode "default"
        bindsym e layout toggle split; mode "default"
        # Toggle the current focus between tiling and floating mode
        bindsym g floating toggle; mode "default"

        bindsym f fullscreen; mode "default"

        bindsym r mode "resize"

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"

        # Scratch$mod+pad:
        # Sway has a "scratchpad", which is a bag of holding for windows.
        # You can send windows there and get them back later.
        # Move the currently focused window to the scratchpad
        #bindsym $mod+Shift+minus move scratchpad
        # Show the next scratchpad window or hide the focused scratchpad window.
        # If there are multiple scratchpad windows, this command cycles through them.
        #bindsym minus scratchpad show
    }
    bindsym $mod+p mode $pane 


    # Swap focus between the tiling area and the floating area
    # bindsym $mod+Shift+g focus mode_toggle

# Resizing containers:
#
mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

###----------------------------------------------------------------------------
### Swap Caps Lock with Left Shift
###----------------------------------------------------------------------------

input type:keyboard xkb_options ctrl:nocaps

###----------------------------------------------------------------------------
### Input configuration
###----------------------------------------------------------------------------

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Touchpad --------------------------------------------------------------------

# evdev is an Xorg input driver	for Linux's generic event devices,
# including most mice, keyboards, tablets and touchscreens.
input * xkb_rules evdev

input "*" {
  xkb_layout us
  # xkb_variant colemak
}

input type:touchpad {
  dwt enabled
  tap enabled
  natural_scroll enabled
  pointer_accel 0.5 # set mouse sensitivity (between -1 and 1)
}

### Screen --------------------------------------------------------------------

set $wide-lg-home "LG Electronics LG HDR WQHD 203NTJJ83188"

output $wide-lg-home {
    mode 3440x1440@49.987Hz 
}

gaps inner 30
gaps outer 70


set $laptop "AU Optronics 0x103D Unknown"
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

### ---------------------------------------------------------------------------

# Brightness
bindsym XF86MonBrightnessDown exec light -U 10
bindsym XF86MonBrightnessUp exec light -A 10

# Volume
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

font pango:Fira Sans SemiBold 10

# border without title bar
default_border pixel 3
client.focused #000000 #5e81ac #ffffff

# https://github.com/swaywm/sway/wiki#gtk-applications-take-20-seconds-to-start
exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    # swaybar_command waybar
    position bottom

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d'; do sleep 1; done

    status_command while $sway-path/sway-status.sh; do sleep 3; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }

    font pango:Sans 14
}

include @sysconfdir@/sway/config.d/*
